name: Process New Album

on:
  workflow_dispatch:
    inputs:
      album_name:
        description: 'Name of the album'
        required: true
        type: string
      album_title:
        description: 'Title of the album'
        required: true
        type: string
      album_date:
        description: 'Date of the album (YYYY-MM-DD)'
        required: true
        type: string
      album_description:
        description: 'Description of the album'
        required: false
        type: string
        default: ''
      cover_image:
        description: 'Name of the cover image file (optional)'
        required: false
        type: string
        default: ''

permissions:
  contents: write

jobs:
  process_album:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: photography-automation
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow jsonschema
          
      - name: Create temporary directory for images
        run: |
          mkdir -p "/tmp/album_images/${{ github.event.inputs.album_name }}"
          echo "Created temporary directory: /tmp/album_images/${{ github.event.inputs.album_name }}"
          
      - name: Create album using existing script
        env:
          PYTHONPATH: ${{ github.workspace }}/photography/utils
        run: |
          cd photography/utils
          python workflow_runner.py \
            "${{ github.event.inputs.album_name }}" \
            "${{ github.event.inputs.album_title }}" \
            "${{ github.event.inputs.album_description }}" \
            "${{ github.event.inputs.album_date }}" \
            "/tmp/album_images/${{ github.event.inputs.album_name }}" \
            "${{ github.event.inputs.cover_image }}"
          
      - name: Verify album creation
        run: |
          echo "Verifying album creation..."
          ALBUM_DIR="photography/albums/${{ github.event.inputs.album_name }}"
          
          echo "Checking album directory structure:"
          ls -R "$ALBUM_DIR" || echo "Album directory not found"
          
          echo "Checking index.html:"
          test -f "$ALBUM_DIR/index.html" && echo "✓ index.html exists" || echo "✗ index.html not found"
          
          echo "Checking images directory:"
          test -d "$ALBUM_DIR/images" && echo "✓ images directory exists" || echo "✗ images directory not found"
          
          echo "Checking albums.json update:"
          grep -q "${{ github.event.inputs.album_name }}" photography/albums/albums.json && \
            echo "✓ Album entry found in albums.json" || echo "✗ Album not found in albums.json"
